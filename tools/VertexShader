#version 330 core

layout(location = 0) in vec3 vertex_pos_ms;
layout(location = 1) in vec2 vertex_uv_ms;
layout(location = 2) in vec3 vertex_normal_ms;

out vec3 vertex_ws;
out vec3 vertex_normal_cs;
out vec3 vertex_origin_dir_cs;
out vec3 vertex_sun_dir_cs;
out vec2 uv;

uniform mat4 MVP;
uniform mat4 M;
uniform mat4 V;
uniform vec3 sun_ws;

void main(){

    gl_Position = MVP * vec4(vertex_pos_ms, 1);

    vertex_ws = (M * vec4(vertex_pos_ms,1)).xyz;

    vec3 vertex_pos_cs = ( V * M * vec4(vertex_pos_ms,1)).xyz;
    vertex_origin_dir_cs = vec3(0,0,0) - vertex_pos_cs;

    vec3 sun_cs = ( V * vec4(sun_ws,1)).xyz;
    vertex_sun_dir_cs = sun_cs + vertex_origin_dir_cs;

    vertex_normal_cs = ( V * M * vec4(vertex_normal_ms,0)).xyz; // Only correct if ModelMatrix does not scale the model ! Use its inverse transpose if not.
    uv = vertex_uv_ms;

}

